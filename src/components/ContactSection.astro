---
interface Props {
  dict: any;
}
const { dict } = Astro.props;
---

<>
  <p class="text-center text-white/80 mb-8 max-w-2xl mx-auto">
    {
      dict.contact?.intro ||
        "¿Tienes un proyecto, una idea o simplemente quieres saludar? Completa el formulario y te responderé lo antes posible."
    }
  </p>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6 items-start">
    <div class="flex flex-col gap-2">
      <a
        href="https://www.google.com/maps/place/Bucaramanga,+Santander,+Colombia"
        target="_blank"
        rel="noopener noreferrer"
        class="bg-[#00091d]/80 border border-white/10 rounded-xl p-3 flex gap-3 items-start hover:bg-[#003159]/40 transition"
      >
        <span class="mt-1 text-yellow-200">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17.657 16.657L13.414 20.9a2 2 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z"
            ></path>
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
        </span>
        <div>
          <div class="font-semibold text-white mb-1">
            {dict.contact?.location}
          </div>
          <div class="text-white/70 text-sm">{dict.contact?.location_city}</div>
        </div>
      </a>
      <a
        href="https://wa.me/573027374438"
        target="_blank"
        rel="noopener noreferrer"
        class="bg-[#00091d]/80 border border-white/10 rounded-xl p-3 flex gap-3 items-start hover:bg-[#003159]/40 transition"
      >
        <span class="mt-1 text-yellow-200">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            ><path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M3 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm0 10a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H5a2 2 0 01-2-2v-2zm10-10a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zm0 10a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"
            ></path></svg
          >
        </span>
        <div>
          <div class="font-semibold text-white mb-1">{dict.contact?.phone}</div>
          <div class="text-white/70 text-sm">+57 302 737 44 38</div>
        </div>
      </a>
      <a
        href="mailto:johsssalinas2work@gmail.com"
        target="_blank"
        rel="noopener noreferrer"
        class="bg-[#00091d]/80 border border-white/10 rounded-xl p-3 flex gap-3 items-start hover:bg-[#003159]/40 transition"
      >
        <span class="mt-1 text-yellow-200">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            ><path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M16 12H8m8 0a8 8 0 11-16 0 8 8 0 0116 0z"></path></svg
          >
        </span>
        <div>
          <div class="font-semibold text-white mb-1">
            {dict.contact?.email_label}
          </div>
          <div class="text-white/70 text-sm">johsssalinas2work@gmail.com</div>
        </div>
      </a>
      <div
        class="bg-[#00091d]/80 border border-white/10 rounded-xl p-3 flex gap-3 items-start"
      >
        <span class="mt-1 text-yellow-200">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            ><path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 8v4l3 3m6 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg
          >
        </span>
        <div class="w-full">
          <div class="font-semibold text-white mb-1">
            {dict.contact?.schedule}
          </div>
          <div class="text-white/70 text-sm">
            <iframe
              src="https://calendly.com/johssalinas2work/reunion-inicial-de-proyecto"
              class="w-full min-h-[220px] md:min-h-[300px] rounded-lg border-none"
              style="background:transparent;"
              frameborder="0"
              scrolling="no"></iframe>
          </div>
        </div>
      </div>
    </div>
    <!-- Formulario de contacto -->
    <form
      action="https://api.web3forms.com/submit"
      method="POST"
      id="contact-form"
      class="bg-[#00091d]/80 border border-white/10 rounded-xl p-4 md:p-6 flex flex-col gap-3 self-start"
    >
      <!-- Web3Forms Access Key -->
      <input
        type="hidden"
        name="access_key"
        value="f8755e0d-957e-4c1e-bb2b-dfbbaf1f11e3"
      />
      <input
        type="hidden"
        name="subject"
        value="Nuevo mensaje desde tu Portfolio"
      />
      <input type="hidden" name="from_name" value="Portfolio Contact Form" />

      <div class="flex flex-col gap-2">
        <label for="nombre" class="text-sm font-medium text-white/80"
          >{dict.contact?.form?.name}</label
        >
        <input
          id="nombre"
          name="nombre"
          type="text"
          required
          class="rounded-lg bg-white/10 border border-white/20 px-4 py-1.5 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-yellow-200 transition"
          placeholder={dict.contact?.form?.placeholder_name}
        />
      </div>
      <div class="flex flex-col gap-2">
        <label for="email" class="text-sm font-medium text-white/80"
          >{dict.contact?.form?.email}</label
        >
        <input
          id="email"
          name="email"
          type="email"
          required
          class="rounded-lg bg-white/10 border border-white/20 px-4 py-1.5 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-yellow-200 transition"
          placeholder={dict.contact?.form?.placeholder_email}
        />
      </div>
      <div class="flex flex-col gap-2">
        <label for="asunto" class="text-sm font-medium text-white/80"
          >{dict.contact?.form?.subject}</label
        >
        <div class="relative">
          <select
            id="asunto"
            name="asunto"
            required
            class="rounded-lg bg-white/10 border border-white/20 px-4 py-1.5 pr-10 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-yellow-200 transition appearance-none w-full"
            style="background-color: #101828; color: #fff"
          >
            <option value="">{dict.contact?.form?.select_subject}</option>
            <option value="proyecto"
              >{dict.contact?.form?.option_project}</option
            >
            <option value="colaboracion"
              >{dict.contact?.form?.option_collab}</option
            >
            <option value="saludo">{dict.contact?.form?.option_greet}</option>
            <option value="otro">{dict.contact?.form?.option_other}</option>
          </select>
          <svg
            class="pointer-events-none absolute right-3 top-1/2 w-5 h-5 text-yellow-200 transition-transform duration-200 select-arrow"
            style="transform:translateY(-50%) rotate(0deg);"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </div>
      </div>
      <style>
        .select-arrow {
          transition: transform 0.2s;
          transform: translateY(-50%) rotate(0deg);
        }
        select:focus ~ .select-arrow {
          transform: translateY(-50%) rotate(180deg) !important;
        }
      </style>
      <div class="flex flex-col gap-2">
        <label for="mensaje" class="text-sm font-medium text-white/80"
          >{dict.contact?.form?.message}</label
        >
        <textarea
          id="mensaje"
          name="mensaje"
          rows="8"
          maxlength="500"
          required
          class="rounded-lg bg-white/10 border border-white/20 px-4 py-1.5 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-yellow-200 transition resize-none min-h-[120px] md:min-h-[150px] max-h-[250px] md:max-h-[320px] w-full"
          placeholder={dict.contact?.form?.placeholder_message}></textarea>
      </div>
      <div id="form-message" class="hidden p-3 rounded-lg text-sm"></div>
      <div class="flex justify-end mt-3">
        <button
          type="submit"
          id="submit-btn"
          data-text-send={dict.contact?.form?.send}
          data-text-sending={dict.contact?.form?.sending}
          data-success-message={dict.contact?.form?.success_message}
          data-error-message={dict.contact?.form?.error_message}
          class="bg-yellow-200 text-black font-semibold px-6 md:px-8 py-2 md:py-3 rounded-lg shadow hover:bg-yellow-300 transition w-full min-h-[40px]"
          >{dict.contact?.form?.send}</button
        >
      </div>
    </form>
  </div>
</>

<script>
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const submitBtn = document.getElementById("submit-btn") as HTMLButtonElement;
  const formMessage = document.getElementById("form-message") as HTMLDivElement;

  // Obtener textos traducidos desde los atributos data
  const textSend = submitBtn.dataset.textSend || "Send message";
  const textSending = submitBtn.dataset.textSending || "Sending...";
  const successMessage =
    submitBtn.dataset.successMessage || "✅ Message sent successfully!";
  const errorMessage =
    submitBtn.dataset.errorMessage ||
    "❌ There was an error. Please try again.";

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Deshabilitar botón
    submitBtn.disabled = true;
    submitBtn.textContent = textSending;

    const formData = new FormData(form);

    try {
      const response = await fetch("https://api.web3forms.com/submit", {
        method: "POST",
        body: formData,
      });

      const data = await response.json();

      if (data.success) {
        formMessage.textContent = successMessage;
        formMessage.className =
          "p-3 rounded-lg text-sm bg-green-500/20 border border-green-500/50 text-green-200";
        form.reset();
      } else {
        throw new Error("Error en el envío");
      }
    } catch (error) {
      formMessage.textContent = errorMessage;
      formMessage.className =
        "p-3 rounded-lg text-sm bg-red-500/20 border border-red-500/50 text-red-200";
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = textSend;

      // Ocultar mensaje después de 5 segundos
      setTimeout(() => {
        formMessage.className = "hidden";
      }, 5000);
    }
  });
</script>
